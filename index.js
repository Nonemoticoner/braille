/**
 * braille
 * https://github.com/Nonemoticoner/braille
 *
 * Copyright (c) 2015-2018 Nonemoticoner
 * Licensed under the MIT license.
 */

const BRAILLE = {
    " ": "⠀",
    _: "⠸",
    "-": "⠤",
    ",": "⠠",
    ";": "⠰",
    ":": "⠱",
    "!": "⠮",
    "?": "⠹",
    ".": "⠨",
    "(": "⠷",
    "[": "⠪",
    "@": "⠈",
    "*": "⠡",
    "/": "⠌",
    "'": "⠄",
    '"': "⠐",
    "\\": "⠳",
    "&": "⠯",
    "%": "⠩",
    "^": "⠘",
    "+": "⠬",
    "<": "⠣",
    ">": "⠜",
    $: "⠫",
    "0": "⠴",
    "1": "⠂",
    "2": "⠆",
    "3": "⠒",
    "4": "⠲",
    "5": "⠢",
    "6": "⠖",
    "7": "⠶",
    "8": "⠦",
    "9": "⠔",
    A: "⠁",
    B: "⠃",
    C: "⠉",
    D: "⠙",
    E: "⠑",
    F: "⠋",
    G: "⠛",
    H: "⠓",
    I: "⠊",
    J: "⠚",
    K: "⠅",
    L: "⠇",
    M: "⠍",
    N: "⠝",
    O: "⠕",
    P: "⠏",
    Q: "⠟",
    R: "⠗",
    S: "⠎",
    T: "⠞",
    U: "⠥",
    V: "⠧",
    W: "⠺",
    X: "⠭",
    Z: "⠵",
    "]": "⠻",
    "#": "⠼",
    Y: "⠽",
    ")": "⠾",
    "=": "⠿"
  };
  
  const ASCII = {
    " ": " ",
    "⠀": " ",
    "⠸": "_",
    "⠤": "-",
    "⠠": ",",
    "⠰": ";",
    "⠱": ":",
    "⠮": "!",
    "⠹": "?",
    "⠨": ".",
    "⠷": "(",
    "⠪": "[",
    "⠈": "@",
    "⠡": "*",
    "⠌": "/",
    "⠄": "'",
    "⠐": '"',
    "⠳": "\\",
    "⠯": "&",
    "⠩": "%",
    "⠘": "^",
    "⠬": "+",
    "⠣": "<",
    "⠜": ">",
    "⠫": "$",
    "⠴": "0",
    "⠂": "1",
    "⠆": "2",
    "⠒": "3",
    "⠲": "4",
    "⠢": "5",
    "⠖": "6",
    "⠶": "7",
    "⠦": "8",
    "⠔": "9",
    "⠁": "A",
    "⠃": "B",
    "⠉": "C",
    "⠙": "D",
    "⠑": "E",
    "⠋": "F",
    "⠛": "G",
    "⠓": "H",
    "⠊": "I",
    "⠚": "J",
    "⠅": "K",
    "⠇": "L",
    "⠍": "M",
    "⠝": "N",
    "⠕": "O",
    "⠏": "P",
    "⠟": "Q",
    "⠗": "R",
    "⠎": "S",
    "⠞": "T",
    "⠥": "U",
    "⠧": "V",
    "⠺": "W",
    "⠭": "X",
    "⠵": "Z",
    "⠻": "]",
    "⠼": "#",
    "⠽": "Y",
    "⠾": ")",
    "⠿": "="
  };
  
  module.exports.toBraille = input => {
    return String(input)
      .toUpperCase()
      .split("")
      .map(char => (char in BRAILLE ? BRAILLE[char] : "?"))
      .join("");
  };
  
  module.exports.toText = input => {
    return String(input)
      .split("")
      .map(code => (code in ASCII ? ASCII[code] : "?"))
      .join("");
  };
